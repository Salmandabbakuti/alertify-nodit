// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["queryCompiler", "driverAdapters", "strictUndefinedChecks"]
  output          = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NoditWebhook {
  id         String   @id // subscription id from Nodit useful for managing webhooks
  protocol   String   @default("ethereum") // e.g. ethereum, polygon, arbitrum, aptos, etc.
  network    String   @default("sepolia") // e.g. mainnet, testnet
  eventType  String   @default("ADDRESS_ACTIVITY") // eg. Nodit event type like "ADDRESS_ACTIVITY"
  webhookUrl String // URL to which the webhook will send data when triggered e.g api route of your app
  addresses  String[] @default([]) // List of addresses to monitor for the event type
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([id, protocol, network, eventType], name: "idx_protocol_network_event")
  @@map("nodit_webhooks")
}

model Monitor {
  id          String   @id @default(cuid())
  description String?  @default("") // Optional description for the monitor
  protocol    String   @default("ethereum") // e.g. ethereum, polygon, arbitrum, aptos, etc.
  network     String   @default("sepolia") // e.g. mainnet, testnet
  eventType   String   @default("ADDRESS_ACTIVITY") // eg. Nodit event type like "ADDRESS_ACTIVITY"
  email       String   @unique // Email address to send notifications to
  address     String // Address to monitor for the event type
  isActive    Boolean  @default(true) // Whether the monitor is active or not
  webhookId   String // associated Nodit webhook id, if any
  createdBy   String // User eth address who created the monitor
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([id, email, createdBy], name: "idx_email_createdBy")
  @@map("monitors")
}
